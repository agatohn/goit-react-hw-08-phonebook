{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/loginForm/LoginForm.module.css","components/loginForm/LoginForm.js","pages/loginPage/LoginPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","className","style","formWrapper","formName","form","onSubmit","e","preventDefault","authOperations","logIn","autoComplete","formLabel","formInput","type","onChange","formBtn","loginPage"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,YAAc,+BAA+B,KAAO,wBAAwB,UAAY,6BAA6B,UAAY,6BAA6B,QAAU,2BAA2B,SAAW,8B,2ICIjN,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMjB,EAAc,EAAdA,MACtC,OAAQiB,GACN,IAAK,QACH,OAAOL,EAASZ,GAClB,IAAK,WACH,OAAOc,EAAYd,GACrB,QACE,SAaN,OACE,sBAAKkB,UAAWC,IAAMC,YAAtB,UACE,oBAAIF,UAAWC,IAAME,SAArB,wBAEA,uBAAMH,UAAWC,IAAMG,KAAMC,SAVZ,SAACC,GACpBA,EAAEC,iBACFjB,EAASkB,IAAeC,MAAM,CAAEhB,QAAOE,cALvCD,EAAS,IACTE,EAAY,KAY2Cc,aAAa,MAAlE,UACE,wBAAOV,UAAWC,IAAMU,UAAxB,kBAEE,uBACEX,UAAWC,IAAMW,UACjBC,KAAK,QACLd,KAAK,QACLjB,MAAOW,EACPqB,SAAUjB,OAId,wBAAOG,UAAWC,IAAMU,UAAxB,qBAEE,uBACEX,UAAWC,IAAMW,UACjBC,KAAK,WACLd,KAAK,WACLjB,MAAOa,EACPmB,SAAUjB,OAId,wBAAQG,UAAWC,IAAMc,QAASF,KAAK,SAAvC,0BCvDO,SAASG,IACtB,OACE,mCACE,cAAC3B,EAAD","file":"static/js/4.7a4b1625.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"LoginForm_formWrapper__1RVxC\",\"form\":\"LoginForm_form__3GedR\",\"formLabel\":\"LoginForm_formLabel__FrI9q\",\"formInput\":\"LoginForm_formInput__1HnC4\",\"formBtn\":\"LoginForm_formBtn__3BTVW\",\"formName\":\"LoginForm_formName__2FMFT\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"../../redux/authorization\";\nimport style from \"./LoginForm.module.css\";\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <div className={style.formWrapper}>\n      <h2 className={style.formName}>Login form</h2>\n\n      <form className={style.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className={style.formLabel}>\n          Email\n          <input\n            className={style.formInput}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={style.formLabel}>\n          Password\n          <input\n            className={style.formInput}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={style.formBtn} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n}\n","import LoginForm from \"../../components/loginForm/LoginForm\";\n\nexport default function loginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n\n// import { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { authOperations } from \"../../redux/authorization\";\n\n// export default function LoginPage() {\n//   const dispatch = useDispatch();\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleChange = ({ target: { name, value } }) => {\n//     switch (name) {\n//       case \"email\":\n//         return setEmail(value);\n//       case \"password\":\n//         return setPassword(value);\n//       default:\n//         return;\n//     }\n//   };\n//   const resetForm = () => {\n//     setEmail(\"\");\n//     setPassword(\"\");\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     dispatch(authOperations.logIn({ email, password }));\n//     resetForm();\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login form</h2>\n\n//       <form onSubmit={handleSubmit} autoComplete=\"off\">\n//         <label>\n//           Email\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={email}\n//             onChange={handleChange}\n//           />\n//         </label>\n\n//         <label>\n//           Password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={handleChange}\n//           />\n//         </label>\n\n//         <button type=\"submit\">Log in</button>\n//       </form>\n//     </div>\n//   );\n// }\n"],"sourceRoot":""}