{"version":3,"sources":["redux/store.js","pages/PublicRoute.js","pages/PrivateRoute.js","components/authNav/AuthNavigation.js","components/navigation/Navigation.js","components/menu/Menu.js","components/header/Header.js","components/App.js","index.js","components/authNav/AuthNavigation.module.css","components/navigation/Navigation.module.css","components/menu/Menu.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducers.js","components/header/Header.module.css","redux/authorization/operations.js","redux/authorization/slice.js","redux/authorization/selectors.js"],"names":["authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","useSelector","authSelectors","getIsLoggedIn","to","PrivateRoute","isLoggedIn","AuthNavigation","className","style","nav","activeClassName","activeNav","exact","Navigation","Menu","dispatch","useDispatch","userName","getUserName","userWrapper","logBtn","type","onClick","authOperations","logOut","Header","headerWrapper","HomePage","lazy","RegPage","LoginPage","PhonebookPage","App","isRefreshingUser","getIsRefreshingUser","useEffect","refreshCurrentUser","fallback","color","height","width","timeout","path","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","contactsActions","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getContacts","state","getFilter","filter","getVisibleContacts","createSelector","normilizedFilter","toLowerCase","contact","name","includes","contactsSelectors","contactsOperations","getContact","axios","get","then","data","catch","error","addContact","number","getState","some","toLocaleLowerCase","post","deleteContact","contactId","delete","createReducer","_","payload","alert","id","combineReducers","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","message","logIn","thunkAPI","persistedToken","operations","authSlice","createSlice","initialState","user","email","extraReducers","fulfilled","action","rejected","pending"],"mappings":"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","file":"static/js/main.aeaa3bc9.chunk.js","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\nimport { contactsReducer } from \"./phonebook\";\nimport { authReducer } from \"./authorization\";\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  });\n// .concat(logger);\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/authorization\";\n\nexport default function PublicRoute({ children, restricted = false, redirectTo = \"/\", ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return <Route {...routeProps}>{shouldRedirect ? <Redirect to={redirectTo} /> : children}</Route>;\n}\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/authorization\";\n\nexport default function PrivateRoute({ children, redirectTo = \"/\", ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return <Route {...routeProps}>{isLoggedIn ? children : <Redirect to={redirectTo} />}</Route>;\n}\n","import { NavLink } from \"react-router-dom\";\nimport style from \"./AuthNavigation.module.css\";\n\nconst AuthNavigation = () => {\n  return (\n    <>\n      <NavLink\n        className={style.nav}\n        activeClassName={style.activeNav}\n        to=\"/register\"\n        exact\n      >\n        register\n      </NavLink>\n      <NavLink\n        className={style.nav}\n        activeClassName={style.activeNav}\n        to=\"/login\"\n        exact\n      >\n        login\n      </NavLink>\n    </>\n  );\n};\n\nexport default AuthNavigation;\n","import { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/authorization\";\nimport style from \"./Navigation.module.css\";\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        className={style.nav}\n        activeClassName={style.activeNav}\n        to=\"/\"\n        exact\n      >\n        home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          className={style.nav}\n          activeClassName={style.activeNav}\n          to=\"/phonebook\"\n          exact\n        >\n          phonebook\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { authOperations, authSelectors } from \"../../redux/authorization\";\nimport style from \"./Menu.module.css\";\n\nconst Menu = () => {\n  const dispatch = useDispatch();\n  const userName = useSelector(authSelectors.getUserName);\n  const logout = () => {\n    dispatch(authOperations.logOut());\n  };\n  return (\n    <div className={style.userWrapper}>\n      <span className={style.userName}>Loged in as: {userName}</span>\n      <button className={style.logBtn} type=\"button\" onClick={logout}>\n        logout\n      </button>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/authorization\";\nimport AuthNavigation from \"../authNav/AuthNavigation\";\nimport Navigation from \"../navigation/Navigation\";\nimport Menu from \"../menu/Menu\";\nimport style from \"./Header.module.css\";\n\nexport default function Header() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header className={style.headerWrapper}>\n      <Navigation /> {isLoggedIn ? <Menu /> : <AuthNavigation />}\n    </header>\n  );\n}\n","// import React from \"react\";\nimport { lazy, Suspense, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../redux/authorization\";\nimport PublicRoute from \"../pages/PublicRoute\";\nimport PrivateRoute from \"../pages/PrivateRoute\";\nimport { Switch } from \"react-router\";\nimport Header from \"./header/Header\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst HomePage = lazy(\n  () => import(\"../pages/homePage/HomePage\") /*webpackChunkName: 'HomePage' */\n);\nconst RegPage = lazy(\n  () => import(\"../pages/regPage/RegPage\") /*webpackChunkName: 'RegPage' */\n);\nconst LoginPage = lazy(\n  () =>\n    import(\"../pages/loginPage/LoginPage\") /*webpackChunkName: 'LoginPage' */\n);\nconst PhonebookPage = lazy(() =>\n  import(\"../pages/phonebookPage/PhonebookPage\")\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isRefreshingUser = useSelector(authSelectors.getIsRefreshingUser);\n\n  useEffect(() => {\n    dispatch(authOperations.refreshCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isRefreshingUser && (\n      <>\n        <Header />\n        <Switch>\n          <Suspense\n            fallback={\n              <div>\n                <Loader\n                  className=\"Loader\"\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={20}\n                  width={100}\n                  timeout={3000}\n                />\n              </div>\n            }\n          >\n            <PublicRoute exact path=\"/\">\n              <HomePage />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted>\n              <RegPage />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/phonebook\">\n              <LoginPage />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/phonebook\" restricted redirectTo=\"/login\">\n              <PhonebookPage />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </>\n    )\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AuthNavigation_nav__1Jirv\",\"activeNav\":\"AuthNavigation_activeNav__25nrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1YopS\",\"activeNav\":\"Navigation_activeNav__2re4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"Menu_userWrapper__1Tu4U\",\"userName\":\"Menu_userName__1T-bx\",\"logBtn\":\"Menu_logBtn__tQ0eS\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst getContactsRequest = createAction(\"contacts/getContactsRequest\");\nconst getContactsSuccess = createAction(\"contacts/getContactsSuccess\");\nconst getContactsError = createAction(\"contacts/getContactsError\");\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst changeFilter = createAction(\"contacts/filter\");\n\nconst contactsActions = {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default contactsActions;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = state => state.contacts.contacts;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normilizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilter));\n  }\n);\n\nconst contactsSelectors = { getContacts, getFilter, getVisibleContacts };\n\nexport default contactsSelectors;\n","import axios from \"axios\";\nimport contactsActions from \"./phonebook-actions\";\n\nconst addContact =\n  ({ name, number }) =>\n  (dispatch, getState) => {\n    const contact = { name, number };\n    const contacts = getState().contacts.contacts;\n\n    if (\n      contacts?.some(\n        (contact) =>\n          contact.name.toLocaleLowerCase() === name.toLocaleLowerCase() ||\n          contacts.some((contact) => contact.number === number)\n      )\n      // .some((contact) => contact.name === name)\n    ) {\n      return dispatch(\n        contactsActions.addContactError(\n          `Name: ${name} or number: ${number} is alredy exist`\n        )\n      );\n    }\n    dispatch(contactsActions.addContactRequest());\n\n    axios\n      .post(\"/contacts\", contact)\n      .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\n      .catch((error) => dispatch(contactsActions.addContactError(error)));\n  };\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(contactsActions.deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(contactsActions.deleteContactError(error)));\n};\n\nconst getContact = () => (dispatch) => {\n  dispatch(contactsActions.getContactsRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(contactsActions.getContactsSuccess(data)))\n    .catch((error) => dispatch(contactsActions.getContactsError(error)));\n};\n\nconst contactsOperations = { getContact, addContact, deleteContact };\nexport default contactsOperations;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./phonebook-actions\";\n\nconst contacts = createReducer([], {\n  [contactsActions.getContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsActions.addContactError]: (_, { payload }) => alert(payload),\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.getContactsRequest]: () => true,\n  [contactsActions.getContactsSuccess]: () => false,\n  [contactsActions.getContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsActions.getContactsError]: (_, { payload }) => payload,\n  [contactsActions.addContactError]: (_, { payload }) => payload,\n  [contactsActions.deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__Wtm4S\"};","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  }\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials, { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials, { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    return error.message;\n  }\n});\n\nconst refreshCurrentUser = createAsyncThunk(\"auth/refresh\", async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const persistedToken = state.auth.token;\n\n  if (persistedToken === null) {\n    return thunkAPI.rejectWithValue();\n  }\n  token.set(persistedToken);\n  try {\n    const { data } = await axios.get(\"/users/current\");\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n});\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  refreshCurrentUser\n};\nexport default operations;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshingUser: false,\n  error: null\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.error = null;\n    },\n    [authOperations.register.rejected](state, action) {\n      state.error = action.payload;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.error = null;\n    },\n    [authOperations.logIn.rejected](state, action) {\n      state.error = action.payload;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      state.isRefreshingUser = false;\n      state.error = null;\n    },\n    [authOperations.refreshCurrentUser.pending](state) {\n      state.isRefreshingUser = true;\n    },\n    [authOperations.refreshCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isRefreshingUser = false;\n    },\n    [authOperations.refreshCurrentUser.rejected](state) {\n      state.isRefreshingUser = false;\n    }\n  }\n});\n\nexport default authSlice.reducer;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getIsRefreshingUser = state => state.auth.isRefreshingUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsRefreshingUser\n};\n\nexport default authSelectors;\n"],"sourceRoot":""}