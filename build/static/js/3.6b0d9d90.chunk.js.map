{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","pages/phonebookPage/PhonebookPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","PhonebookForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleContactData","e","target","className","style","formWrapper","form","onSubmit","contact","preventDefault","contactsOperations","addContact","formLabel","htmlFor","formInput","type","onChange","pattern","title","required","formBtn","PhonebookList","useEffect","getContact","filteredContacts","useSelector","contactsSelectors","getVisibleContacts","contactLabel","contactList","map","contactListItem","listItemdData","href","contactsBtn","onClick","id","deleteContact","Filter","inputValue","getFilter","filterLabel","filterInput","contactsActions","changeFilter","currentTarget","autoComplete","phonebookPage"],"mappings":"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","file":"static/js/3.6b0d9d90.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__1e4gc\",\"form\":\"ContactForm_form__23bmR\",\"formLabel\":\"ContactForm_formLabel__2AL1_\",\"formInput\":\"ContactForm_formInput__f3leB\",\"formBtn\":\"ContactForm_formBtn__1g3Gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItemdData\":\"ContactList_listItemdData__21Ehk\",\"contactList\":\"ContactList_contactList__2FUTE\",\"contactListItem\":\"ContactList_contactListItem__376jd\",\"contactsName\":\"ContactList_contactsName__1mKkH\",\"contactsBtn\":\"ContactList_contactsBtn__tln4P\",\"contactLabel\":\"ContactList_contactLabel__15w1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Filter_formWrapper__3c6ei\",\"filterLabel\":\"Filter_filterLabel__3IG2v\",\"filterInput\":\"Filter_filterInput__2A8CT\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { contactsOperations } from \"../../redux/phonebook\";\nimport style from \"./ContactForm.module.css\";\n\nexport default function PhonebookForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const onSubmit = (contact) =>\n    dispatch(contactsOperations.addContact(contact));\n\n  const handleContactData = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  return (\n    <div className={style.formWrapper}>\n      <form className={style.form} onSubmit={handleSubmit}>\n        <div>\n          <label className={style.formLabel} htmlFor=\"name\">\n            Name\n            <input\n              className={style.formInput}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleContactData}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label className={style.formLabel} htmlFor=\"number\">\n            Number\n            <input\n              className={style.formInput}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleContactData}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button className={style.formBtn} type=\"submit\">\n          Add contact to phonebook\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/phonebook\";\nimport style from \"./ContactList.module.css\";\n\nexport default function PhonebookList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContact());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const deleteBtnHandler = (id) => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return (\n    <>\n      <h2 className={style.contactLabel}>Contacts</h2>\n      <ul className={style.contactList}>\n        {filteredContacts.map((contact) => (\n          <li className={style.contactListItem} key={contact.id}>\n            <span className={style.listItemdData}>\n              {contact.name}:{\" \"}\n              <a href=\"tel:+{contact.number}\">{contact.number}</a>\n            </span>\n            <button\n              className={style.contactsBtn}\n              type=\"button\"\n              onClick={() => deleteBtnHandler(contact.id)}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsActions, contactsSelectors } from \"../../redux/phonebook\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const inputValue = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div className={style.formWrapper}>\n      <label className={style.filterLabel}>\n        Find contact by name\n        <input\n          className={style.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={inputValue}\n          onChange={onChange}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import Form from \"../../components/contactForm/ContactForm\";\nimport PhonebookList from \"../../components/contactList/ContactList\";\nimport Filter from \"../../components/filter/Filter\";\n\nexport default function phonebookPage() {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <PhonebookList />\n    </>\n  );\n}\n"],"sourceRoot":""}