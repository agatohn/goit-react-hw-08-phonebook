{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","../node_modules/@material-ui/icons/Delete.js","components/filter/Filter.module.css","../node_modules/@material-ui/icons/esm/Save.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","pages/phonebookPage/PhonebookPage.js"],"names":["module","exports","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","createSvgIcon","PhonebookForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleContactData","e","target","className","style","formWrapper","form","onSubmit","contact","preventDefault","contactsOperations","addContact","formLabel","htmlFor","formInput","type","onChange","pattern","title","required","Button","startIcon","Save","color","variant","PhonebookList","useEffect","getContact","filteredContacts","useSelector","contactsSelectors","getVisibleContacts","Container","component","maxWidth","CssBaseline","Typography","align","Grid","container","spacing","map","item","xs","contactListItem","listItemdData","href","size","onClick","id","deleteContact","Filter","inputValue","getFilter","filterLabel","filterInput","contactsActions","changeFilter","currentTarget","autoComplete","phonebookPage"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,+B,oBCAlMD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,YAAc,iCAAiC,gBAAkB,qCAAqC,aAAe,kCAAkC,YAAc,iCAAiC,aAAe,oC,iCCC1R,IAAIC,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeL,EAAS,aAAc,CAC3CM,OAAO,IAETN,EAAQO,aAAU,EAElB,IAAIC,EAAQL,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,kFACD,UAEJX,EAAQO,QAAUE,G,oBClBlBV,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,4BAA4B,YAAc,8B,uJCCrGY,cAA4BJ,gBAAoB,OAAQ,CACrEG,EAAG,mJACD,Q,OCGW,SAASE,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAWC,cAIXC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMT,EAAd,EAAcA,MACd,OAAQS,GACN,IAAK,OACHC,EAAQV,GACR,MACF,IAAK,SACHY,EAAUZ,GACV,MACF,QACE,SAeN,OACE,qBAAKkB,UAAWC,IAAMC,YAAtB,SACE,uBAAMF,UAAWC,IAAME,KAAMC,SARZ,SAACN,GAtBL,IAACO,EAuBhBP,EAAEQ,iBAvBcD,EAwBP,CAAEd,OAAME,UAvBjBE,EAASY,IAAmBC,WAAWH,IAiBvCb,EAAQ,IACRE,EAAU,KAWR,UACE,8BACE,wBAAOM,UAAWC,IAAMQ,UAAWC,QAAQ,OAA3C,iBAEE,uBACEV,UAAWC,IAAMU,UACjBC,KAAK,OACLrB,KAAK,OACLT,MAAOS,EACPsB,SAAUhB,EACViB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,SAId,8BACE,wBAAOhB,UAAWC,IAAMQ,UAAWC,QAAQ,SAA3C,mBAEE,uBACEV,UAAWC,IAAMU,UACjBC,KAAK,MACLrB,KAAK,SACLT,MAAOW,EACPoB,SAAUhB,EACViB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,SAId,cAACC,EAAA,EAAD,CACEC,UAAW,cAACC,EAAD,IACXC,MAAM,UACNC,QAAQ,YACRT,KAAK,SAJP,2C,4EC7DO,SAASU,IACtB,IAAM3B,EAAWC,cAEjB2B,qBAAU,WACR5B,EAASY,IAAmBiB,gBAC3B,CAAC7B,IAEJ,IAAM8B,EAAmBC,YAAYC,IAAkBC,oBAMvD,OACE,mCACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAYC,MAAM,SAASJ,UAAU,KAAKT,QAAQ,KAAlD,sBAGA,cAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SAEGZ,EAAiBa,KAAI,SAACjC,GAAD,OACpB,cAAC8B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SAEE,sBAAKxC,UAAWC,IAAMwC,gBAAtB,UACE,uBAAMzC,UAAWC,IAAMyC,cAAvB,UACGrC,EAAQd,KADX,IACkB,IAChB,mBAAGoD,KAAK,wBAAR,SAAiCtC,EAAQZ,YAE3C,cAACwB,EAAA,EAAD,CACEG,MAAM,YACNC,QAAQ,YACRuB,KAAK,QACL1B,UAAW,cAAC,IAAD,IACXN,KAAK,SACLiC,QAAS,kBA3BCC,EA2BsBzC,EAAQyC,QA1BtDnD,EAASY,IAAmBwC,cAAcD,IADnB,IAACA,GAqBZ,wBAPmBzC,EAAQyC,c,sBCD5BE,EA5BA,WACb,IAAMC,EAAavB,YAAYC,IAAkBuB,WAC3CvD,EAAWC,cAMjB,OACE,qBAAKI,UAAWC,IAAMC,YAAtB,SACE,wBAAOF,UAAWC,IAAMkD,YAAxB,iCAEE,uBACEnD,UAAWC,IAAMmD,YACjBxC,KAAK,OACLrB,KAAK,SACLT,MAAOmE,EACPpC,SAbS,SAACf,GAChBH,EAAS0D,IAAgBC,aAAaxD,EAAEyD,cAAczE,SAahD0E,aAAa,MACb1C,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,UCtBH,SAASyC,IACtB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACnC,EAAD","file":"static/js/5.ccc71d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__1e4gc\",\"form\":\"ContactForm_form__23bmR\",\"formLabel\":\"ContactForm_formLabel__2AL1_\",\"formInput\":\"ContactForm_formInput__f3leB\",\"formBtn\":\"ContactForm_formBtn__1g3Gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItemdData\":\"ContactList_listItemdData__21Ehk\",\"contactList\":\"ContactList_contactList__2FUTE\",\"contactListItem\":\"ContactList_contactListItem__376jd\",\"contactsName\":\"ContactList_contactsName__1mKkH\",\"contactsBtn\":\"ContactList_contactsBtn__tln4P\",\"contactLabel\":\"ContactList_contactLabel__15w1X\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Filter_formWrapper__3c6ei\",\"filterLabel\":\"Filter_filterLabel__3IG2v\",\"filterInput\":\"Filter_filterInput__2A8CT\"};","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { contactsOperations } from \"../../redux/phonebook\";\nimport Button from \"@material-ui/core/Button\";\nimport style from \"./ContactForm.module.css\";\nimport { Save } from \"@material-ui/icons\";\n\nexport default function PhonebookForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const onSubmit = (contact) =>\n    dispatch(contactsOperations.addContact(contact));\n\n  const handleContactData = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  return (\n    <div className={style.formWrapper}>\n      <form className={style.form} onSubmit={handleSubmit}>\n        <div>\n          <label className={style.formLabel} htmlFor=\"name\">\n            Name\n            <input\n              className={style.formInput}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleContactData}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label className={style.formLabel} htmlFor=\"number\">\n            Number\n            <input\n              className={style.formInput}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleContactData}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <Button\n          startIcon={<Save />}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Add contact to phonebook\n        </Button>\n        {/* className={style.formBtn} */}\n      </form>\n    </div>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/phonebook\";\nimport style from \"./ContactList.module.css\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nexport default function PhonebookList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContact());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const deleteBtnHandler = (id) => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xl\">\n        <CssBaseline />\n        <Typography align=\"center\" component=\"h2\" variant=\"h4\">\n          Contacts\n        </Typography>\n        <Grid container spacing={2}>\n          {/* <ul className={style.contactList}> */}\n          {filteredContacts.map((contact) => (\n            <Grid item xs={3} key={contact.id}>\n              {/* <li className={style.contactListItem} key={contact.id}> */}\n              <div className={style.contactListItem}>\n                <span className={style.listItemdData}>\n                  {contact.name}:{\" \"}\n                  <a href=\"tel:+{contact.number}\">{contact.number}</a>\n                </span>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"small\"\n                  startIcon={<DeleteIcon />}\n                  type=\"button\"\n                  onClick={() => deleteBtnHandler(contact.id)}\n                >\n                  delete\n                </Button>\n              </div>\n              {/* </li> */}\n            </Grid>\n          ))}\n          {/* </ul> */}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsActions, contactsSelectors } from \"../../redux/phonebook\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const inputValue = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div className={style.formWrapper}>\n      <label className={style.filterLabel}>\n        Find contact by name\n        <input\n          className={style.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={inputValue}\n          onChange={onChange}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import Form from \"../../components/contactForm/ContactForm\";\nimport PhonebookList from \"../../components/contactList/ContactList\";\nimport Filter from \"../../components/filter/Filter\";\n\nexport default function phonebookPage() {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <PhonebookList />\n    </>\n  );\n}\n"],"sourceRoot":""}